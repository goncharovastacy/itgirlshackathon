[
    {"title": "Компонент ",
    "text": "Определенная часть пользовательского интерфейса, которая объединяет логику и отображение. Пример: Кнопка, форма входа."},
    {"title": "Пропсы",
    "text": "Свойства, которые передаются компоненту для настройки его поведения и отображения. Пример: Отображение текста на кнопке, передача данных в форму."},
    {"title": "Состояние",
    "text": "Данные, которые могут изменяться внутри компонента и влиять на его отображение. Пример: Открытое или закрытое состояние модального окна."},
    {"title": "Жизненный цикл",
    "text": "События, которые происходят в компоненте на разных этапах его существования. Пример: Событие 'componentDidMount' вызывается после монтирования компонента."},
    {"title": "JSX",
    "text": "Расширение языка JavaScript, которое позволяет описывать структуру пользовательского интерфейса внутри кода. Пример: <div>Привет, мир!</div>."},
    {"title": "Контекст",
    "text": "Способ передачи данных через иерархию компонентов без явной передачи пропсов. Пример: Передача темы оформления приложения внутри компонентов. "},
    {"title": "Условный рендеринг",
    "text": "Техника, позволяющая в зависимости от значения определенного условия отрисовывать различные компоненты. Пример: Отображение разных компонентов в зависимости от авторизации пользователя."},
    {"title": "Хуки",
    "text": "Функции, позволяющие добавлять состояние и другую функциональность в функциональные компоненты. Пример: useState - хук, который добавляет возможность использования состояния внутри функционального компонента."},
    {"title": "Реактивное программирование",
    "text": "Подход, который позволяет создавать эффективные и отзывчивые пользовательские интерфейсы путем обновления только необходимых частей при изменении данных. Пример: При изменении данных в форме автоматическое обновление отображения."},
    {"title": "Виртуальный DOM",
    "text": "Техника оптимизации, которая позволяет сравнивать и обновлять только измененные части пользовательского интерфейса вместо обновления всей страницы. Пример: Обновление списка элементов без перерисовки всего списка при добавлении нового элемента."}
]